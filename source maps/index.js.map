{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * gengojs-default-plugin\n * A gengojs plugin for gengojs-accept\n * http://iwatakeshi.github.io/gengojs-accept/index.html\n */\nimport accept from 'gengojs-accept';\nimport debug from 'gengojs-debug';\nimport _ from 'lodash';\n/**\n * @class Header\n */\nclass Header {\n  /**\n   * @constructor\n   * @param {object} request - The request object\n   * @param {object} options - The options object\n   */\n  constructor(request, options) {\n    // Debug\n    debug('header', 'debug',\n      `class: ${Header.name}`, 'process: constructor');\n    debug('header', 'info',\n      `class: ${Header.name}`, `request exists: ${!(!request) }`);\n    debug('header', 'info',\n      `class: ${Header.name}`,\n      `options exists: ${!(!request) && !_.isEmpty(options) }`);\n    // Set Header\n    this.header = accept(this.request, this.options);\n    // Set Locale\n    this.locale = this.getLocale();\n  }\n  /**\n   * Parses the Accept-Launguage from the header\n   * @param {object} [request] - The request object\n   * @returns {string} - The parsed Accept-Language\n   */\n  getAcceptLanguge() {\n    debug('header', 'debug',\n      `class: ${Header.name}`,\n      `process: ${this.getAcceptLanguge.name}`);\n\n    this.locale = this.header\n      .getAcceptLanguage\n      .apply(this.header, arguments);\n\n    debug('header', 'info',\n      `class: ${Header.name}`, `locale: ${this.locale}`);\n  }\n  /**\n   * Returns the current locale\n   * @returns {string} - The current locale\n   */\n  getLocale() {\n    debug('header', 'debug',\n      `class: ${Header.name}`,\n      `process: ${this.getLocale.name}`);\n\n    this.locale = this.header\n      .getLocale\n      .apply(this.header, arguments);\n\n    debug('header', 'info',\n      `class: ${Header.name}`, `locale: ${this.locale}`);\n    return this.locale;\n  }\n  /**\n   * Sets the current locale\n   * @param {string} - The locale to override\n   * @returns {string} - The current locale\n   */\n  setLocale() {\n    debug('header', 'debug',\n      `class: ${Header.name}`,\n      `process: ${this.setLocale.name}`);\n\n    this.locale = this.header\n      .setLocale\n      .apply(this.header, arguments);\n\n    debug('header', 'info',\n      `class: ${Header.name}`, `locale: ${this.locale}`);\n    return this.locale;\n  }\n  /**\n   * Parses the Accept-Language from the header and extracts the locale\n   * @param {object} [request] - The request object\n   * @param {string} [fallback] - The locale to fallback\n   * @returns {string} - The parsed locale\n   */\n  getFromHeader() {\n    debug('header', 'debug',\n      `class: ${Header.name}`,\n      `process: ${this.getFromHeader.name}`);\n\n    this.locale = this.header\n      .getFromHeader\n      .apply(this.header, arguments);\n\n    debug('header', 'info',\n      `class: ${Header.name}`, `locale: ${this.locale}`);\n    return this.locale;\n  }\n  /**\n   * Parses the query string from the url and extracts the locale\n   * @param {object} key - The key of the query string\n   * @param {string} [fallback] - The locale to fallback\n   * @returns {string} - The parsed locale\n   */\n  getFromQuery() {\n    debug('header', 'debug',\n      `class: ${Header.name}`,\n      `process: ${this.getFromQuery.name}`);\n\n    this.locale = this.header\n      .getFromQuery\n      .apply(this.header, arguments);\n\n    debug('header', 'info',\n      `class: ${Header.name}`, `locale: ${this.locale}`);\n    return this.locale;\n  }\n  /**\n   * Parses the domain from the url and extracts the locale\n   * @param {string} [fallback] - The locale to fallback\n   * @returns {string} - The parsed locale\n   */\n  getFromDomain() {\n    debug('header', 'debug',\n      `class: ${Header.name}`,\n      `process: ${this.getFromDomain.name}`);\n\n    this.locale = this.header\n      .getFromDomain\n      .apply(this.header, arguments);\n\n    debug('header', 'info',\n      `class: ${Header.name}`, `locale: ${this.locale}`);\n    return this.locale;\n  }\n  /**\n   * Parses the sub-domain from the url and extracts the locale\n   * @param {string} [fallback] - The locale to fallback\n   * @returns {string} - The parsed locale\n   */\n  getFromSubDomain() {\n    debug('header', 'debug',\n      `class: ${Header.name}`,\n      `process: ${this.getFromSubDomain.name}`);\n\n    this.locale = this.header\n      .getFromSubDomain\n      .apply(this.header, arguments);\n\n    debug('header', 'info',\n      `class: ${Header.name}`, `locale: ${this.locale}`);\n    return this.locale;\n  }\n  /**\n   * Parses the cookie from the request object and extracts the locale\n   * @param {object} key - The key of the query string\n   * @param {string} [fallback] - The locale to fallback\n   * @returns {string} - The parsed locale\n   */\n  getFromCookie() {\n    debug('header', 'debug',\n      `class: ${Header.name}`,\n      `process: ${this.getFromCookie.name}`);\n\n    this.locale = this.header\n      .getFromCookie\n      .apply(this.header, arguments);\n\n    debug('header', 'info',\n      `class: ${Header.name}`, `locale: ${this.locale}`);\n    return this.locale;\n  }\n  /**\n   * Parses the url and extracts the locale\n   * @param {string} [fallback] - The locale to fallback\n   * @returns {string} - The parsed locale\n   */\n  getFromUrl() {\n    debug('header', 'debug',\n      `class: ${Header.name}`,\n      `process: ${this.getFromUrl.name}`);\n\n    this.locale = this.header\n      .getFromUrl\n      .apply(this.header, arguments);\n\n    debug('header', 'info',\n      `class: ${Header.name}`, `locale: ${this.locale}`);\n    return this.locale;\n  }\n  /**\n   * Detects the locale by using the 'detect' options.\n   * @param {string} [locale] - The locale to override\n   * @returns {string} - The detected locale\n   */\n  detectLocale() {\n    debug('header', 'debug',\n      `class: ${Header.name}`,\n      `process: ${this.detectLocale.name}`);\n\n    this.locale = this.header\n      .detectLocale\n      .apply(this.header, arguments);\n\n    debug('header', 'info',\n      `class: ${Header.name}`, `locale: ${this.locale}`);\n    return this.locale;\n  }\n\n}\n\nexport default () => {\n  'use strict';\n  return {\n    main: function(req) {\n      var options = this.options.header;\n      this.header = new Header(req, options);\n    },\n    package: _.merge({\n      type: 'header'\n    }, require('./package')),\n    defaults: require('./defaults')\n  };\n};"],"sourceRoot":"/source/"}