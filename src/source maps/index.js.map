{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * gengojs-default-plugin\n * A gengojs plugin for [gengojs-accept](http://gengojs.github.io/accept/index.html)\n */\nimport accept from 'gengojs-accept';\nimport debug from 'gengojs-debug';\nimport _ from 'lodash';\nvar log = debug('header');\n/**\n * @class Header\n */\nclass Header {\n  /**\n   * @constructor\n   * @param {object} request - The request object\n   * @param {object} options - The options object\n   */\n  constructor(request, options) {\n      // Debug\n      log.debug('header', 'debug',\n          `class: ${Header.name}`, 'process: constructor')\n        .debug(`request exists: ${!!request}`)\n        .debug(`options exists: ${!!options}`)\n        .debug(\n          `gengojs-accept exists: ${\n          !!(this.header = accept(request, options))\n        }`)\n        .debug(`locale: ${\n          (this.locale = this.header.getLocale())\n        }`);\n    }\n    /**\n     * Parses the Accept-Launguage from the header\n     * @param {object} [request] - The request object\n     * @returns {string} - The parsed Accept-Language\n     */\n  getAcceptLanguge() {\n      log.debug(`class: ${Header.name}`,\n        `process: ${this.getAcceptLanguge.name}`);\n\n      this.locale = this.header\n        .getAcceptLanguage\n        .apply(this.header, arguments);\n\n      log.info(`locale: ${this.locale}`);\n      return this.locale;\n    }\n    /**\n     * Returns the current locale\n     * @returns {string} - The current locale\n     */\n  getLocale() {\n      log.debug(`class: ${Header.name}`,\n        `process: ${this.getLocale.name}`);\n\n      this.locale = this.header\n        .getLocale\n        .apply(this.header, arguments);\n\n      log.info(`locale: ${this.locale}`);\n      return this.locale;\n    }\n    /**\n     * Sets the current locale\n     * @param {string} - The locale to override\n     * @returns {string} - The current locale\n     */\n  setLocale() {\n      log.debug(`class: ${Header.name}`,\n        `process: ${this.setLocale.name}`);\n\n      this.locale = this.header\n        .setLocale\n        .apply(this.header, arguments);\n\n      log.info(`locale: ${this.locale}`);\n      return this.locale;\n    }\n    /**\n     * Parses the Accept-Language from the header and extracts the locale\n     * @param {object} [request] - The request object\n     * @param {string} [fallback] - The locale to fallback\n     * @returns {string} - The parsed locale\n     */\n  getFromHeader() {\n      log.debug(`class: ${Header.name}`,\n        `process: ${this.getFromHeader.name}`);\n\n      this.locale = this.header\n        .getFromHeader\n        .apply(this.header, arguments);\n\n      log.info(`locale: ${this.locale}`);\n      return this.locale;\n    }\n    /**\n     * Parses the query string from the url and extracts the locale\n     * @param {object} key - The key of the query string\n     * @param {string} [fallback] - The locale to fallback\n     * @returns {string} - The parsed locale\n     */\n  getFromQuery() {\n      log.debug(`class: ${Header.name}`,\n        `process: ${this.getFromQuery.name}`);\n\n      this.locale = this.header\n        .getFromQuery\n        .apply(this.header, arguments);\n\n      log.info(`locale: ${this.locale}`);\n      return this.locale;\n    }\n    /**\n     * Parses the domain from the url and extracts the locale\n     * @param {string} [fallback] - The locale to fallback\n     * @returns {string} - The parsed locale\n     */\n  getFromDomain() {\n      log.debug(`class: ${Header.name}`,\n        `process: ${this.getFromDomain.name}`);\n\n      this.locale = this.header\n        .getFromDomain\n        .apply(this.header, arguments);\n\n      log.info(`locale: ${this.locale}`);\n      return this.locale;\n    }\n    /**\n     * Parses the sub-domain from the url and extracts the locale\n     * @param {string} [fallback] - The locale to fallback\n     * @returns {string} - The parsed locale\n     */\n  getFromSubDomain() {\n      log.debug(`class: ${Header.name}`,\n        `process: ${this.getFromSubDomain.name}`);\n\n      this.locale = this.header\n        .getFromSubDomain\n        .apply(this.header, arguments);\n\n      log.info(`locale: ${this.locale}`);\n      return this.locale;\n    }\n    /**\n     * Parses the cookie from the request object and extracts the locale\n     * @param {object} key - The key of the query string\n     * @param {string} [fallback] - The locale to fallback\n     * @returns {string} - The parsed locale\n     */\n  getFromCookie() {\n      log.debug(`class: ${Header.name}`,\n        `process: ${this.getFromCookie.name}`);\n\n      this.locale = this.header\n        .getFromCookie\n        .apply(this.header, arguments);\n\n      log.info(`locale: ${this.locale}`);\n      return this.locale;\n    }\n    /**\n     * Parses the url and extracts the locale\n     * @param {string} [fallback] - The locale to fallback\n     * @returns {string} - The parsed locale\n     */\n  getFromUrl() {\n      log.debug(`class: ${Header.name}`,\n        `process: ${this.getFromUrl.name}`);\n\n      this.locale = this.header\n        .getFromUrl\n        .apply(this.header, arguments);\n\n      log.info(`locale: ${this.locale}`);\n      return this.locale;\n    }\n    /**\n     * Detects the locale by using the 'detect' options.\n     * @param {string} [locale] - The locale to override\n     * @returns {string} - The detected locale\n     */\n  detectLocale() {\n    log.debug(`class: ${Header.name}`,\n      `process: ${this.detectLocale.name}`);\n\n    this.locale = this.header\n      .detectLocale\n      .apply(this.header, arguments);\n\n    log.info(`locale: ${this.locale}`);\n    return this.locale;\n  }\n\n}\n\nexport default () => {\n  'use strict';\n  return {\n    main: function(req) {\n      var options = this.options.header;\n      this.header = new Header(req, options);\n    },\n    package: _.merge({\n      type: 'header'\n    }, require('../package')),\n    defaults: require('../defaults')\n  };\n};"],"sourceRoot":"/source/"}